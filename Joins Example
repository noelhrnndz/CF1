# Using JOIN to find insightful customer data and movie rental data.

--Find top 10 countries with the most Rockbuster customers.

SELECT D.country,
        COUNT (A.customer_id) AS number_of_customers
FROM customer A
INNER JOIN 

--Find top customers global.

SELECT B.customer_id,
        CONCAT (B.first_name, ' ', B.last_name) AS customer_name,
        D.city,
        E.country,
        SUM(A.amount) AS total_amount_paid
FROM payment A
INNER JOIN customer B ON A.customer_id = B.customer_id
INNER JOIN address C ON B.address_id = C.address_id
INNER JOIN city D ON C.city_id = D.city_id
INNER JOIN country E ON D.country_id = E.country_id
GROUP BY    B.customer_id,
            D.city,
            E.country
ORDER BY total_amount_paid DESC
LIMIT 10

--Top selling titles.

SELECT D.title,
        COUNT (D.rental_rate) AS rental_count,
        SUM(A.amount) AS total_revenue
FROM payment A
INNER JOIN rental B ON A.rental_id = B.rental_id
INNER JOIN inventory C ON B.inventory_id = C.inventory_id
INNER JOIN film D ON C. film_id = D.film_id
GROUP BY    D.title,
            D.rental_rate
ORDER BY total_revenue DESC
LIMIT 10

--Top selling genres.

SELECT F.name AS genre,
        COUNT(D.rental_rate) AS rental_count,
        SUM(A.amount) AS total revenue
FROM payment A
INNER JOIN rental B ON A.rental_id = B.rental_id
INNER JOIN inventory C ON B.inventory_id = C.inventory_id
INNER JOIN film D ON C. film_id = D.film_id
INNER JOIN film_category E ON D.film_id = E.film_id
INNER JOIN category F ON E.category_id = F.category_id
GROUP BY    F.name,
            D.rental_rate
ORDER BY total_revenue DESC
LIMIT 10


